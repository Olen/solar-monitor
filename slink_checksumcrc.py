#!/usr/bin/env python3

from __future__ import absolute_import
# from __future__ import print_function

import os
import sys
from multipledispatch import dispatch 

import logging
import duallog

class ChecksumCRC(object):
    crc16_tab_h = []
    crc16_tab_l = []
    bArr = [0] * 256
    bArr2 = [0] * 256
    USER_MASK = 65535

    bArr[1] = -63;
    bArr[2] = -127;
    bArr[3] = 64;
    bArr[4] = 1;
    bArr[5] = -64;
    bArr[6] = -128;
    bArr[7] = 65;
    bArr[8] = 1;
    bArr[9] = -64;
    bArr[10] = -128;
    bArr[11] = 65;
    bArr[13] = -63;
    bArr[14] = -127;
    bArr[15] = 64;
    bArr[16] = 1;
    bArr[17] = -64;
    bArr[18] = -128;
    bArr[19] = 65;
    bArr[21] = -63;
    bArr[22] = -127;
    bArr[23] = 64;
    bArr[25] = -63;
    bArr[26] = -127;
    bArr[27] = 64;
    bArr[28] = 1;
    bArr[29] = -64;
    bArr[30] = -128;
    bArr[31] = 65;
    bArr[32] = 1;
    bArr[33] = -64;
    bArr[34] = -128;
    bArr[35] = 65;
    bArr[37] = -63;
    bArr[38] = -127;
    bArr[39] = 64;
    bArr[41] = -63;
    bArr[42] = -127;
    bArr[43] = 64;
    bArr[44] = 1;
    bArr[45] = -64;
    bArr[46] = -128;
    bArr[47] = 65;
    bArr[49] = -63;
    bArr[50] = -127;
    bArr[51] = 64;
    bArr[52] = 1;
    bArr[53] = -64;
    bArr[54] = -128;
    bArr[55] = 65;
    bArr[56] = 1;
    bArr[57] = -64;
    bArr[58] = -128;
    bArr[59] = 65;
    bArr[61] = -63;
    bArr[62] = -127;
    bArr[63] = 64;
    bArr[64] = 1;
    bArr[65] = -64;
    bArr[66] = -128;
    bArr[67] = 65;
    bArr[69] = -63;
    bArr[70] = -127;
    bArr[71] = 64;
    bArr[73] = -63;
    bArr[74] = -127;
    bArr[75] = 64;
    bArr[76] = 1;
    bArr[77] = -64;
    bArr[78] = -128;
    bArr[79] = 65;
    bArr[81] = -63;
    bArr[82] = -127;
    bArr[83] = 64;
    bArr[84] = 1;
    bArr[85] = -64;
    bArr[86] = -128;
    bArr[87] = 65;
    bArr[88] = 1;
    bArr[89] = -64;
    bArr[90] = -128;
    bArr[91] = 65;
    bArr[93] = -63;
    bArr[94] = -127;
    bArr[95] = 64;
    bArr[97] = -63;
    bArr[98] = -127;
    bArr[99] = 64;
    bArr[100] = 1;
    bArr[101] = -64;
    bArr[102] = -128;
    bArr[103] = 65;
    bArr[104] = 1;
    bArr[105] = -64;
    bArr[106] = -128;
    bArr[107] = 65;
    bArr[109] = -63;
    bArr[110] = -127;
    bArr[111] = 64;
    bArr[112] = 1;
    bArr[113] = -64;
    bArr[114] = -128;
    bArr[115] = 65;
    bArr[117] = -63;
    bArr[118] = -127;
    bArr[119] = 64;
    bArr[121] = -63;
    bArr[122] = -127;
    bArr[123] = 64;
    bArr[124] = 1;
    bArr[125] = -64;
    bArr[126] = -128;
    bArr[127] = 65;
    bArr[128] = 1;
    bArr[129] = -64;
    bArr[130] = -128;
    bArr[131] = 65;
    bArr[133] = -63;
    bArr[134] = -127;
    bArr[135] = 64;
    bArr[137] = -63;
    bArr[138] = -127;
    bArr[139] = 64;
    bArr[140] = 1;
    bArr[141] = -64;
    bArr[142] = -128;
    bArr[143] = 65;
    bArr[145] = -63;
    bArr[146] = -127;
    bArr[147] = 64;
    bArr[148] = 1;
    bArr[149] = -64;
    bArr[150] = -128;
    bArr[151] = 65;
    bArr[152] = 1;
    bArr[153] = -64;
    bArr[154] = -128;
    bArr[155] = 65;
    bArr[157] = -63;
    bArr[158] = -127;
    bArr[159] = 64;
    bArr[161] = -63;
    bArr[162] = -127;
    bArr[163] = 64;
    bArr[164] = 1;
    bArr[165] = -64;
    bArr[166] = -128;
    bArr[167] = 65;
    bArr[168] = 1;
    bArr[169] = -64;
    bArr[170] = -128;
    bArr[171] = 65;
    bArr[173] = -63;
    bArr[174] = -127;
    bArr[175] = 64;
    bArr[176] = 1;
    bArr[177] = -64;
    bArr[178] = -128;
    bArr[179] = 65;
    bArr[181] = -63;
    bArr[182] = -127;
    bArr[183] = 64;
    bArr[185] = -63;
    bArr[186] = -127;
    bArr[187] = 64;
    bArr[188] = 1;
    bArr[189] = -64;
    bArr[190] = -128;
    bArr[191] = 65;
    bArr[193] = -63;
    bArr[194] = -127;
    bArr[195] = 64;
    bArr[196] = 1;
    bArr[197] = -64;
    bArr[198] = -128;
    bArr[199] = 65;
    bArr[200] = 1;
    bArr[201] = -64;
    bArr[202] = -128;
    bArr[203] = 65;
    bArr[205] = -63;
    bArr[206] = -127;
    bArr[207] = 64;
    bArr[208] = 1;
    bArr[209] = -64;
    bArr[210] = -128;
    bArr[211] = 65;
    bArr[213] = -63;
    bArr[214] = -127;
    bArr[215] = 64;
    bArr[217] = -63;
    bArr[218] = -127;
    bArr[219] = 64;
    bArr[220] = 1;
    bArr[221] = -64;
    bArr[222] = -128;
    bArr[223] = 65;
    bArr[224] = 1;
    bArr[225] = -64;
    bArr[226] = -128;
    bArr[227] = 65;
    bArr[229] = -63;
    bArr[230] = -127;
    bArr[231] = 64;
    bArr[233] = -63;
    bArr[234] = -127;
    bArr[235] = 64;
    bArr[236] = 1;
    bArr[237] = -64;
    bArr[238] = -128;
    bArr[239] = 65;
    bArr[241] = -63;
    bArr[242] = -127;
    bArr[243] = 64;
    bArr[244] = 1;
    bArr[245] = -64;
    bArr[246] = -128;
    bArr[247] = 65;
    bArr[248] = 1;
    bArr[249] = -64;
    bArr[250] = -128;
    bArr[251] = 65;
    bArr[253] = -63;
    bArr[254] = -127;
    bArr[255] = 64;
    crc16_tab_h = bArr;

    bArr2[1] = -64;
    bArr2[2] = -63;
    bArr2[3] = 1;
    bArr2[4] = -61;
    bArr2[5] = 3;
    bArr2[6] = 2;
    bArr2[7] = -62;
    bArr2[8] = -58;
    bArr2[9] = 6;
    bArr2[10] = 7;
    bArr2[11] = -57;
    bArr2[12] = 5;
    bArr2[13] = -59;
    bArr2[14] = -60;
    bArr2[15] = 4;
    bArr2[16] = -52;
    bArr2[17] = 12;
    bArr2[18] = 13;
    bArr2[19] = -51;
    bArr2[20] = 15;
    bArr2[21] = -49;
    bArr2[22] = -50;
    bArr2[23] = 14;
    bArr2[24] = 10;
    bArr2[25] = -54;
    bArr2[26] = -53;
    bArr2[27] = 11;
    bArr2[28] = -55;
    bArr2[29] = 9;
    bArr2[30] = 8;
    bArr2[31] = -56;
    bArr2[32] = -40;
    bArr2[33] = 24;
    bArr2[34] = 25;
    bArr2[35] = -39;
    bArr2[36] = 27;
    bArr2[37] = -37;
    bArr2[38] = -38;
    bArr2[39] = 26;
    bArr2[40] = 30;
    bArr2[41] = -34;
    bArr2[42] = -33;
    bArr2[43] = 31;
    bArr2[44] = -35;
    bArr2[45] = 29;
    bArr2[46] = 28;
    bArr2[47] = -36;
    bArr2[48] = 20;
    bArr2[49] = -44;
    bArr2[50] = -43;
    bArr2[51] = 21;
    bArr2[52] = -41;
    bArr2[53] = 23;
    bArr2[54] = 22;
    bArr2[55] = -42;
    bArr2[56] = -46;
    bArr2[57] = 18;
    bArr2[58] = 19;
    bArr2[59] = -45;
    bArr2[60] = 17;
    bArr2[61] = -47;
    bArr2[62] = -48;
    bArr2[63] = 16;
    bArr2[64] = -16;
    bArr2[65] = 48;
    bArr2[66] = 49;
    bArr2[67] = -15;
    bArr2[68] = 51;
    bArr2[69] = -13;
    bArr2[70] = -14;
    bArr2[71] = 50;
    bArr2[72] = 54;
    bArr2[73] = -10;
    bArr2[74] = -9;
    bArr2[75] = 55;
    bArr2[76] = -11;
    bArr2[77] = 53;
    bArr2[78] = 52;
    bArr2[79] = -12;
    bArr2[80] = 60;
    bArr2[81] = -4;
    bArr2[82] = -3;
    bArr2[83] = 61;
    bArr2[84] = -1;
    bArr2[85] = 63;
    bArr2[86] = 62;
    bArr2[87] = -2;
    bArr2[88] = -6;
    bArr2[89] = 58;
    bArr2[90] = 59;
    bArr2[91] = -5;
    bArr2[92] = 57;
    bArr2[93] = -7;
    bArr2[94] = -8;
    bArr2[95] = 56;
    bArr2[96] = 40;
    bArr2[97] = -24;
    bArr2[98] = -23;
    bArr2[99] = 41;
    bArr2[100] = -21;
    bArr2[101] = 43;
    bArr2[102] = 42;
    bArr2[103] = -22;
    bArr2[104] = -18;
    bArr2[105] = 46;
    bArr2[106] = 47;
    bArr2[107] = -17;
    bArr2[108] = 45;
    bArr2[109] = -19;
    bArr2[110] = -20;
    bArr2[111] = 44;
    bArr2[112] = -28;
    bArr2[113] = 36;
    bArr2[114] = 37;
    bArr2[115] = -27;
    bArr2[116] = 39;
    bArr2[117] = -25;
    bArr2[118] = -26;
    bArr2[119] = 38;
    bArr2[120] = 34;
    bArr2[121] = -30;
    bArr2[122] = -29;
    bArr2[123] = 35;
    bArr2[124] = -31;
    bArr2[125] = 33;
    bArr2[126] = 32;
    bArr2[127] = -32;
    bArr2[128] = -96;
    bArr2[129] = 96;
    bArr2[130] = 97;
    bArr2[131] = -95;
    bArr2[132] = 99;
    bArr2[133] = -93;
    bArr2[134] = -94;
    bArr2[135] = 98;
    bArr2[136] = 102;
    bArr2[137] = -90;
    bArr2[138] = -89;
    bArr2[139] = 103;
    bArr2[140] = -91;
    bArr2[141] = 101;
    bArr2[142] = 100;
    bArr2[143] = -92;
    bArr2[144] = 108;
    bArr2[145] = -84;
    bArr2[146] = -83;
    bArr2[147] = 109;
    bArr2[148] = -81;
    bArr2[149] = 111;
    bArr2[150] = 110;
    bArr2[151] = -82;
    bArr2[152] = -86;
    bArr2[153] = 106;
    bArr2[154] = 107;
    bArr2[155] = -85;
    bArr2[156] = 105;
    bArr2[157] = -87;
    bArr2[158] = -88;
    bArr2[159] = 104;
    bArr2[160] = 120;
    bArr2[161] = -72;
    bArr2[162] = -71;
    bArr2[163] = 121;
    bArr2[164] = -69;
    bArr2[165] = 123;
    bArr2[166] = 122;
    bArr2[167] = -70;
    bArr2[168] = -66;
    bArr2[169] = 126;
    bArr2[170] = 127;
    bArr2[171] = -65;
    bArr2[172] = 125;
    bArr2[173] = -67;
    bArr2[174] = -68;
    bArr2[175] = 124;
    bArr2[176] = -76;
    bArr2[177] = 116;
    bArr2[178] = 117;
    bArr2[179] = -75;
    bArr2[180] = 119;
    bArr2[181] = -73;
    bArr2[182] = -74;
    bArr2[183] = 118;
    bArr2[184] = 114;
    bArr2[185] = -78;
    bArr2[186] = -77;
    bArr2[187] = 115;
    bArr2[188] = -79;
    bArr2[189] = 113;
    bArr2[190] = 112;
    bArr2[191] = -80;
    bArr2[192] = 80;
    bArr2[193] = -112;
    bArr2[194] = -111;
    bArr2[195] = 81;
    bArr2[196] = -109;
    bArr2[197] = 83;
    bArr2[198] = 82;
    bArr2[199] = -110;
    bArr2[200] = -106;
    bArr2[201] = 86;
    bArr2[202] = 87;
    bArr2[203] = -105;
    bArr2[204] = 85;
    bArr2[205] = -107;
    bArr2[206] = -108;
    bArr2[207] = 84;
    bArr2[208] = -100;
    bArr2[209] = 92;
    bArr2[210] = 93;
    bArr2[211] = -99;
    bArr2[212] = 95;
    bArr2[213] = -97;
    bArr2[214] = -98;
    bArr2[215] = 94;
    bArr2[216] = 90;
    bArr2[217] = -102;
    bArr2[218] = -101;
    bArr2[219] = 91;
    bArr2[220] = -103;
    bArr2[221] = 89;
    bArr2[222] = 88;
    bArr2[223] = -104;
    bArr2[224] = -120;
    bArr2[225] = 72;
    bArr2[226] = 73;
    bArr2[227] = -119;
    bArr2[228] = 75;
    bArr2[229] = -117;
    bArr2[230] = -118;
    bArr2[231] = 74;
    bArr2[232] = 78;
    bArr2[233] = -114;
    bArr2[234] = -113;
    bArr2[235] = 79;
    bArr2[236] = -115;
    bArr2[237] = 77;
    bArr2[238] = 76;
    bArr2[239] = -116;
    bArr2[240] = 68;
    bArr2[241] = -124;
    bArr2[242] = -123;
    bArr2[243] = 69;
    bArr2[244] = -121;
    bArr2[245] = 71;
    bArr2[246] = 70;
    bArr2[247] = -122;
    bArr2[248] = -126;
    bArr2[249] = 66;
    bArr2[250] = 67;
    bArr2[251] = -125;
    bArr2[252] = 65;
    bArr2[253] = -127;
    bArr2[254] = -128;
    bArr2[255] = 64;
    crc16_tab_l = bArr2;


    @classmethod
    def calcCrc16(cls, data, offset = 0, length = None, preval = None):
        if length is None:
            length = len(data)
        if preval is None:
            preval = cls.USER_MASK
        ucCRCHi = (65280 & preval) >> 8
        ucCRCLo = preval & 255
        i = 0
        while i < length:
            iIndex = (data[offset + i] ^ ucCRCLo) & 255
            print("iIndex: {}".format(iIndex))
            ucCRCLo = ucCRCHi ^ cls.crc16_tab_h[iIndex]
            i += 1
            ucCRCHi = cls.crc16_tab_l[iIndex]
        return ((ucCRCHi & 255) << 8) | (ucCRCLo & 255 & cls.USER_MASK)
'''

    @classmethod
    @dispatch(object, list)
    def calcCrc16(cls, data):
        return cls.calcCrc16(data, 0, len(data))

    @classmethod
    @dispatch(object, list, int, int)
    def calcCrc16(cls, data, offset, length):
        return cls.calcCrc16(data, offset, length, cls.USER_MASK)

    @classmethod
    @dispatch(object, list, int, int, int)
    def calcCrc16(cls, data, offset, length, preval):
        ucCRCHi = (65280 & preval) >> 8
        ucCRCLo = preval & 255
        i = 0
        while i < length:
            iIndex = (data[offset + i] ^ ucCRCLo) & 255
            ucCRCLo = ucCRCHi ^ cls.crc16_tab_h[iIndex]
            i += 1
            ucCRCHi = cls.crc16_tab_l[iIndex]
        return ((ucCRCHi & 255) << 8) | (ucCRCLo & 255 & cls.USER_MASK)
'''
